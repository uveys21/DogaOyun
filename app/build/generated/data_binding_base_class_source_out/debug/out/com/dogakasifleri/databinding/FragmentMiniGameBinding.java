// Generated by view binder compiler. Do not edit!
package com.dogakasifleri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dogakasifleri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMiniGameBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonBack;

  @NonNull
  public final Button buttonHint;

  @NonNull
  public final Button buttonRestart;

  @NonNull
  public final LinearLayout gameButtonsContainer;

  @NonNull
  public final LinearLayout gameContainer;

  @NonNull
  public final FrameLayout gameContent;

  @NonNull
  public final LinearLayout gameSelectionLayout;

  @NonNull
  public final TextView textViewGameDescription;

  @NonNull
  public final TextView textViewGameTitle;

  private FragmentMiniGameBinding(@NonNull ScrollView rootView, @NonNull Button buttonBack,
      @NonNull Button buttonHint, @NonNull Button buttonRestart,
      @NonNull LinearLayout gameButtonsContainer, @NonNull LinearLayout gameContainer,
      @NonNull FrameLayout gameContent, @NonNull LinearLayout gameSelectionLayout,
      @NonNull TextView textViewGameDescription, @NonNull TextView textViewGameTitle) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.buttonHint = buttonHint;
    this.buttonRestart = buttonRestart;
    this.gameButtonsContainer = gameButtonsContainer;
    this.gameContainer = gameContainer;
    this.gameContent = gameContent;
    this.gameSelectionLayout = gameSelectionLayout;
    this.textViewGameDescription = textViewGameDescription;
    this.textViewGameTitle = textViewGameTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMiniGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMiniGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mini_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMiniGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBack;
      Button buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.buttonHint;
      Button buttonHint = ViewBindings.findChildViewById(rootView, id);
      if (buttonHint == null) {
        break missingId;
      }

      id = R.id.buttonRestart;
      Button buttonRestart = ViewBindings.findChildViewById(rootView, id);
      if (buttonRestart == null) {
        break missingId;
      }

      id = R.id.gameButtonsContainer;
      LinearLayout gameButtonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (gameButtonsContainer == null) {
        break missingId;
      }

      id = R.id.gameContainer;
      LinearLayout gameContainer = ViewBindings.findChildViewById(rootView, id);
      if (gameContainer == null) {
        break missingId;
      }

      id = R.id.gameContent;
      FrameLayout gameContent = ViewBindings.findChildViewById(rootView, id);
      if (gameContent == null) {
        break missingId;
      }

      id = R.id.gameSelectionLayout;
      LinearLayout gameSelectionLayout = ViewBindings.findChildViewById(rootView, id);
      if (gameSelectionLayout == null) {
        break missingId;
      }

      id = R.id.textViewGameDescription;
      TextView textViewGameDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewGameDescription == null) {
        break missingId;
      }

      id = R.id.textViewGameTitle;
      TextView textViewGameTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewGameTitle == null) {
        break missingId;
      }

      return new FragmentMiniGameBinding((ScrollView) rootView, buttonBack, buttonHint,
          buttonRestart, gameButtonsContainer, gameContainer, gameContent, gameSelectionLayout,
          textViewGameDescription, textViewGameTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
